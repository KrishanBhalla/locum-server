openapi: "3.0.0"
info:
  version: 1.0.0
  title: Locum Server
  description: OpenAPI 3.0 config for Locum Server
  contact:
    name: Krishan Bhalla
    email: krishanbhallaoffice@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: localhost:8080/api
paths:
  /users:
    post:
      description: |
        Returns all users from the server
      operationId: findUsers
      requestBody:
        description: User prefix to seerch
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: User Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        default:
          description: unexpected error
    
  /login:
    post:
      description: |
        Login or sign up
      operationId: loginOrSignup
      requestBody:
        description: User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'  
      responses:
        '200':
          description: Login Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        default:
          description: unexpected error
   
  /friends:
  
    get:
        description: |
          Find all friends
        operationId: getFriends
        responses:
          '200':
            description: Find Friends Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FindFriendsResponse'
          default:
            description: unexpected error
    delete:
      description: deletes a single friend based on the userId and friendId supplied
      operationId: deleteFriend
      requestBody:
        description: Friend/User pair to delete
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFriendRequest'
      responses:
        '204':
          description: friend deleted
        default:
          description: unexpected error
  
  /friends/requests:
  
    get:
        description: |
          Find all friend requests
        operationId: getFriendRequests
        responses:
          '200':
            description: Find Friends Requests Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FindFriendsResponse'
          default:
            description: unexpected error
  

  
  /friends/locations:
    get:
      description: | 
        Find the locations of all friends
      operationId: getLocationsOfFriends
      responses:
        '200':
          description: Get Friend Locations Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFriendLocationsResponse'
        default:
          description: unexpected error

  /friends/request:
    post:
        description: |
          Follow a new user
        operationId: createFriendRequest
        requestBody:
          description: User to follow
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequestRequest'
        responses:
          '200':
            description: Friend Request Response
          default:
            description: unexpected error
  
  /friends/response:
    post:
        description: |
          Accept or reject a friend request
        operationId: updateFriendRequest
        requestBody:
          description: Accepted or denied friend request
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendResponseRequest'
        responses:
          '200':
            description: Follow Response Response
          default:
            description: unexpected error
  
components:
# Users
  schemas:

    UserRequest:
      type: object
      required:
        - queryString  
      properties:
        queryString:
          type: string

    UserResponse:
      type: object
      required:
        - userToken
        - fullName
      properties:
        userToken:
          type: string
        fullName:
          type: string

    UserLocation:
      type: object
      description: The location of a user with a timestamp given in epoch millis
      required:
        - userId
        - latitude
        - longitude
        - timestamp
      properties:
        userId:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        timestamp:
          type: integer
          format: int64
# Login
    LoginRequest:
      type: object
      required:
        - userId  
      properties:
        userId:
          type: string
        fullName:
          type: string
        email:
          type: string  
    LoginResponse:
      type: object
      required:
        - token  
      properties:
        token:
          type: string
# Friends
  
    FindFriendsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'

# Followers
    DeleteFriendRequest:
      type: object
      required:
        - friendId
      properties:
        friendId:
          type: string
# GetFriendLocations
    GetFriendLocationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserLocation'

# FriendRequestRequest
    FriendRequestRequest:
      type: object
      required:
        - friendId
      properties:
        friendId:
          type: string

# FriendResponseRequest
    FriendResponseRequest:
      type: object
      required:
        - friendId
        - accept
      properties:
        friendId:
          type: string
        accept:
          type: boolean
# Errors
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string