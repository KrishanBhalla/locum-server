openapi: "3.0.0"
info:
  version: 1.0.0
  title: Locum Server
  description: OpenAPI 3.0 config for Locum Server
  contact:
    name: Krishan Bhalla
    email: krishanbhallaoffice@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: localhost:8080/api
paths:
  /users:
    post:
      description: |
        Returns all users from the server
      operationId: findUsers
      requestBody:
        description: User prefix to seerch
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: User Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        default:
          description: unexpected error
    
  /login:
    post:
      description: |
        Login or sign up
      operationId: loginOrSignup
      requestBody:
        description: User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'  
      responses:
        '200':
          description: Login Success
        default:
          description: unexpected error
   
  /followers:
  
    post:
        description: |
          Find all followers
        operationId: findFollowers
        requestBody:
          description: User to find the followers of
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindFriendsRequest'
        responses:
          '200':
            description: Find Followers Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FindFriendsResponse'
          default:
            description: unexpected error
    delete:
      description: deletes a single follower based on the userId and followerId supplied
      operationId: deleteFollower
      requestBody:
        description: Follower/User pair to delete
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFollowerRequest'
      responses:
        '204':
          description: follower deleted
        default:
          description: unexpected error
  
  /following:
    post:
        description: |
          Find all following
        operationId: findFollowing
        requestBody:
          description: User to find the following of
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindFriendsRequest'
        responses:
          '200':
            description: Find Following Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FindFriendsResponse'
          default:
            description: unexpected error
    delete:
      description: deletes a single follower based on the userId and followerId supplied
      operationId: deleteFollowing
      requestBody:
        description: Following/User pair to delete
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFollowingRequest'
      responses:
        '204':
          description: follower deleted
        default:
          description: unexpected error
  
  /following/locations:
    post:
      description: | 
        Find the locations of all followed users
      operationId: updateLocationsOfFollowedUsers
      requestBody:
        description: User for whom we will find the location of their followign
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFollowedUserLocationsRequest'
      responses:
        '200':
          description: Find Following Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFollowedUserLocationsResponse'
        default:
          description: unexpected error

  /follow/reqeust:
    post:
        description: |
          Follow a new user
        operationId: createFollowRequest
        requestBody:
          description: User to follow
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowRequestRequest'
        responses:
          '200':
            description: Follow Request Response
          default:
            description: unexpected error
  /follow/response:
    post:
        description: |
          Accept or reject a follow request
        operationId: updateFollowRequest
        requestBody:
          description: Accepted or denied follow request
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowResponseRequest'
        responses:
          '200':
            description: Follow Response Response
          default:
            description: unexpected error
  
components:
# Users
  schemas:

    UserRequest:
      type: object
      required:
        - queryString  
      properties:
        queryString:
          type: string

    UserResponse:
      type: object
      required:
        - userId
        - fullName
      properties:
        userId:
          type: string
        fullName:
          type: string

    UserLocation:
      type: object
      description: The location of a user with a timestamp given in epoch millis
      required:
        - userId
        - latitude
        - longitude
        - timestamp
      properties:
        userId:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        timestamp:
          type: integer
          format: int64
# Login
    LoginRequest:
      type: object
      required:
        - userId  
      properties:
        userId:
          type: string
        fullName:
          type: string
        email:
          type: string  
# Friends
    FindFriendsRequest:
      type: object
      required:
        - userId  
      properties:
        userId:
          type: string
  
    FindFriendsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'

# Followers
    DeleteFollowerRequest:
      type: object
      required:
        - userId  
        - followerUserId
      properties:
        userId:
          type: string
        followerUserId:
          type: string
# Following
    DeleteFollowingRequest:
      type: object
      required:
        - userId  
        - followingUserId
      properties:
        userId:
          type: string
        followingUserId:
          type: string
# UpdateFollowedUserLocations
    UpdateFollowedUserLocationsRequest:
      type: object
      required:
        - userId  
      properties:
        userId:
          type: string
    UpdateFollowedUserLocationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserLocation'

# FollowRequestRequest
    FollowRequestRequest:
      type: object
      required:
        - userId
        - followingUserId
      properties:
        userId:
          type: string
        followingUserId:
          type: string

# FollowResponseRequest
    FollowResponseRequest:
      type: object
      required:
        - userId
        - requestedFollowerUserId
        - accept
      properties:
        userId:
          type: string
        requestedFollowerUserId:
          type: string
        accept:
          type: boolean
# Errors
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string